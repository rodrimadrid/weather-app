{"version":3,"sources":["components/Searchbar.js","components/Forecast.js","components/WeatherDetail.js","components/WeatherView.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","handleSearch","className","onSubmit","type","name","placeholder","Forecast","i","daily","icon","id","temp","weather","date","Date","width","getFullYear","getMonth","getDate","toDateString","slice","src","alt","Math","round","min","max","WeatherDetail","title","detail","detailUnit","WeatherView","currentWeather","forecast","main","wind","description","map","item","speed","pressure","humidity","App","useState","city","setCity","setCurrentWeather","setForecast","coord","setCoord","apiKey","getWeather","URL","a","fetch","response","json","datoscurrentWeather","lat","lon","position","pos","coords","longitude","latitude","useEffect","navigator","geolocation","getCurrentPosition","console","log","e","preventDefault","input","target","firstChild","value","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6b35ef5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Searchbar = ({handleSearch}) => {\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-light mx-3 mb-3\">\r\n                <div className=\"container-fluid justify-content-center\">\r\n                    <form className=\"d-flex\"onSubmit={handleSearch}>\r\n                    <input className=\"form-control me-2\" type=\"search\" name='country' placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\" >Search</button>\r\n                    </form>\r\n                </div>\r\n               \r\n            </nav>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Searchbar\r\n","import React from \"react\";\r\n\r\nconst Forecast = ({daily, icon, id}) => {\r\n  const {temp, weather} = daily\r\n  const date = new Date()\r\n  const nextDay = (i)=>{ \r\n  const day = new Date((date.getFullYear()), (date.getMonth()) , (date.getDate() + i))\r\n  return day.toDateString().slice(0, 11)\r\n  } \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card m-2 forecast\" width=\"15rem;\">\r\n          <p>{nextDay(id + 1)}</p>\r\n        <img\r\n          src={icon(weather[0].icon)}\r\n          className=\"card-img-top icon\"\r\n          alt=\"...\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <strong className=\"m-2 \">{Math.round(temp.min)}°C</strong>\r\n          <strong className=\"m-2 \">{Math.round(temp.max)}°C</strong>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from 'react'\r\n\r\nconst WeatherDetail = ({title, detail, detailUnit}) => {\r\n\r\n    return (    \r\n        <div className=\"card detail mb-4\">\r\n            <span>{title}</span>\r\n            <div className=\"card-body\">\r\n                <span className='weather-detail'>{detail}</span><p>{detailUnit}</p>\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default WeatherDetail\r\n","import React from \"react\";\r\nimport Forecast from \"./Forecast\";\r\nimport WeatherDetail from \"./WeatherDetail\";\r\nconst WeatherView = ({ currentWeather, forecast }) => {\r\n\r\n  const { main, weather, name, wind } = currentWeather;\r\n  const { daily } = forecast;\r\n  const icon = (i) => {\r\n    return `http://openweathermap.org/img/wn/${i}@2x.png`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-weather\">\r\n      <div className=\"weather\">\r\n        <strong>{name}</strong>\r\n        <img src={icon(weather[0].icon)} className=\"icon\" />\r\n        <strong className=\"temp\">{Math.round(main.temp)}° C</strong>\r\n        <strong className=\"text-muted\">{weather[0].description}</strong>\r\n      </div>\r\n      <div className=\"container-forecast justify-content-xxl-center\">\r\n        <div className=\"forecasts\">\r\n          {daily.map((item, id)=>{\r\n            return( id !== 7 &&  <Forecast key={id} id={id} daily={item} icon={icon}/>)\r\n          })}\r\n       </div>\r\n      </div>\r\n      <div className=\"container-fluid d-md-flex justify-content-md-around \">\r\n        <WeatherDetail title='Wind status' detail={wind.speed} detailUnit='m/s'/>\r\n        <WeatherDetail title='Air pressure' detail={main.pressure} detailUnit='hPa'/>\r\n        <WeatherDetail title='Humidity' detail={main.humidity} detailUnit='%'/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherView;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Searchbar from \"./components/Searchbar\";\nimport WeatherView from \"./components/WeatherView\";\n\nfunction App() {\n  const [city, setCity] = useState();\n  const [currentWeather, setCurrentWeather] = useState();\n  const [forecast, setForecast] = useState();\n  const [coord, setCoord] = useState();\n\n  const apiKey = \"cfc0bb2a30e6c158d818575f9fd77655\";\n\n  async function getWeather(URL) {\n    if (URL === 1) {\n      let response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=en&units=metric&appid=${apiKey}`\n      );\n      let datoscurrentWeather = await response.json();\n      setCurrentWeather(datoscurrentWeather);\n      setCoord(datoscurrentWeather.coord);\n    } else if (URL === 2) {\n      let response = await fetch(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&units=metric&exclude=hourly,minutely&appid=${apiKey}`\n      );\n      let datoscurrentWeather = await response.json();\n      setForecast(datoscurrentWeather);\n    } else if (URL === 3) {\n      let response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${coord.lat}&lon=${coord.lon}&lang=sp&units=metric&appid=${apiKey}`\n      );\n      let datoscurrentWeather = await response.json();\n      setCurrentWeather(datoscurrentWeather);\n    }\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    let input = e.target.firstChild;\n    setCity(input.value);\n  \n  };\n  const getLocation = () => {\n    navigator.geolocation\n      ? navigator.geolocation.getCurrentPosition(position)\n      : console.log(\"ubicacion no disponible\");\n  };\n  const position = (pos) => {\n    setCoord({\n      lon: pos.coords.longitude,\n      lat: pos.coords.latitude,\n    });\n  };\n  useEffect(() => {\n    getLocation();\n  }, []);\n  useEffect(() => {\n   coord ?  getWeather(2) : console.log('coords not found')\n  }, [coord]);\n  useEffect(() => {\n    if (!city && coord) {\n      getWeather(3);\n    }\n  }, [city, coord]);\n  useEffect(() => {\n    city? getWeather(1) : console.log('city not found');\n  }, [city])\n\n  return (\n    <div className=\"App\">\n      <Searchbar handleSearch={handleSearch} />\n      {forecast && currentWeather && (\n        <WeatherView currentWeather={currentWeather} forecast={forecast} />\n      )}\n      {!currentWeather && (\n        <div className=\"spinner-border text-info loading\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}